snippet lua_close void lua_close(lua_State *L);
	lua_close(${1:L});
snippet lua_atpanic lua_CFunction lua_atpanic(lua_State *L, lua_CFunction panicf);
	lua_atpanic(${1:L}, ${2:panicf});
snippet lua_gettop int lua_gettop(lua_State *L);
	lua_gettop(${1:L});
snippet lua_settop void lua_settop(lua_State *L, int idx);
	lua_settop(${1:L}, ${2:idx});
snippet lua_pushvalue void lua_pushvalue(lua_State *L, int idx);
	lua_pushvalue(${1:L}, ${2:idx});
snippet lua_remove void lua_remove(lua_State *L, int idx);
	lua_remove(${1:L}, ${2:idx});
snippet lua_insert void lua_insert(lua_State *L, int idx);
	lua_insert(${1:L}, ${2:idx});
snippet lua_replace void lua_replace(lua_State *L, int idx);
	lua_replace(${1:L}, ${2:idx});
snippet lua_checkstack int lua_checkstack(lua_State *L, int sz);
	lua_checkstack(${1:L}, ${2:sz});
snippet lua_xmove void lua_xmove(lua_State *from, lua_State *to, int n);
	lua_xmove(${1:from}, ${2:to}, ${3:n});
snippet lua_isnumber int lua_isnumber(lua_State *L, int idx);
	lua_isnumber(${1:L}, ${2:idx});
snippet lua_isstring int lua_isstring(lua_State *L, int idx);
	lua_isstring(${1:L}, ${2:idx});
snippet lua_iscfunction int lua_iscfunction(lua_State *L, int idx);
	lua_iscfunction(${1:L}, ${2:idx});
snippet lua_isuserdata int lua_isuserdata(lua_State *L, int idx);
	lua_isuserdata(${1:L}, ${2:idx});
snippet lua_type int lua_type(lua_State *L, int idx);
	lua_type(${1:L}, ${2:idx});
snippet lua_equal int lua_equal(lua_State *L, int idx1, int idx2);
	lua_equal(${1:L}, ${2:idx1}, ${3:idx2});
snippet lua_rawequal int lua_rawequal(lua_State *L, int idx1, int idx2);
	lua_rawequal(${1:L}, ${2:idx1}, ${3:idx2});
snippet lua_lessthan int lua_lessthan(lua_State *L, int idx1, int idx2);
	lua_lessthan(${1:L}, ${2:idx1}, ${3:idx2});
snippet lua_tonumber lua_Number lua_tonumber(lua_State *L, int idx);
	lua_tonumber(${1:L}, ${2:idx});
snippet lua_tointeger lua_Integer lua_tointeger(lua_State *L, int idx);
	lua_tointeger(${1:L}, ${2:idx});
snippet lua_toboolean int lua_toboolean(lua_State *L, int idx);
	lua_toboolean(${1:L}, ${2:idx});
snippet lua_objlen size_t lua_objlen(lua_State *L, int idx);
	lua_objlen(${1:L}, ${2:idx});
snippet lua_tocfunction lua_CFunction lua_tocfunction(lua_State *L, int idx);
	lua_tocfunction(${1:L}, ${2:idx});
snippet lua_pushnil void lua_pushnil(lua_State *L);
	lua_pushnil(${1:L});
snippet lua_pushnumber void lua_pushnumber(lua_State *L, lua_Number n);
	lua_pushnumber(${1:L}, ${2:n});
snippet lua_pushinteger void lua_pushinteger(lua_State *L, lua_Integer n);
	lua_pushinteger(${1:L}, ${2:n});
snippet lua_pushlstring void lua_pushlstring(lua_State *L, const char *s, size_t l);
	lua_pushlstring(${1:L}, ${2:s}, ${3:l});
snippet lua_pushstring void lua_pushstring(lua_State *L, const char *s);
	lua_pushstring(${1:L}, ${2:s});
snippet lua_pushcclosure void lua_pushcclosure(lua_State *L, lua_CFunction fn, int n);
	lua_pushcclosure(${1:L}, ${2:fn}, ${3:n});
snippet lua_pushboolean void lua_pushboolean(lua_State *L, int b);
	lua_pushboolean(${1:L}, ${2:b});
snippet lua_pushlightuserdata void lua_pushlightuserdata(lua_State *L, void *p);
	lua_pushlightuserdata(${1:L}, ${2:p});
snippet lua_pushthread int lua_pushthread(lua_State *L);
	lua_pushthread(${1:L});
snippet lua_gettable void lua_gettable(lua_State *L, int idx);
	lua_gettable(${1:L}, ${2:idx});
snippet lua_getfield void lua_getfield(lua_State *L, int idx, const char *k);
	lua_getfield(${1:L}, ${2:idx}, ${3:k});
snippet lua_rawget void lua_rawget(lua_State *L, int idx);
	lua_rawget(${1:L}, ${2:idx});
snippet lua_rawgeti void lua_rawgeti(lua_State *L, int idx, int n);
	lua_rawgeti(${1:L}, ${2:idx}, ${3:n});
snippet lua_createtable void lua_createtable(lua_State *L, int narr, int nrec);
	lua_createtable(${1:L}, ${2:narr, nrec});
snippet lua_getmetatable int lua_getmetatable(lua_State *L, int objindex);
	lua_getmetatable(${1:L}, ${2:objindex});
snippet lua_getfenv void lua_getfenv(lua_State *L, int idx);
	lua_getfenv(${1:L}, ${2:idx});
snippet lua_settable void lua_settable(lua_State *L, int idx);
	lua_settable(${1:L}, ${2:idx});
snippet lua_setfield void lua_setfield(lua_State *L, int idx, const char *k);
	lua_setfield(${1:L}, ${2:idx}, ${3:k});
snippet lua_rawset void lua_rawset(lua_State *L, int idx);
	lua_rawset(${1:L}, ${2:idx});
snippet lua_rawseti void lua_rawseti(lua_State *L, int idx, int n);
	lua_rawseti(${1:L}, ${2:idx}, ${3:n});
snippet lua_setmetatable int lua_setmetatable(lua_State *L, int objindex);
	lua_setmetatable(${1:L}, ${2:objindex});
snippet lua_setfenv int lua_setfenv(lua_State *L, int idx);
	lua_setfenv(${1:L}, ${2:idx});
snippet lua_call void lua_call(lua_State *L, int nargs, int nresults);
	lua_call(${1:L}, ${2:nargs}, ${3:nresults});
snippet lua_pcall int lua_pcall(lua_State *L, int nargs, int nresults, int errfunc);
	lua_pcall(${1:L}, ${2:nargs}, ${3:nresults}, ${4:errfunc});
snippet lua_cpcall int lua_cpcall(lua_State *L, lua_CFunction func, void *ud);
	lua_cpcall(${1:L}, ${2:func}, ${3:ud});
snippet lua_load int lua_load(lua_State *L, lua_Reader reader, void *dt, const char *chunkname);
	lua_load(${1:L}, ${2:reader}, ${3:dt}, ${4:chunkname});
snippet lua_dump int lua_dump(lua_State *L, lua_Writer writer, void *data);
	lua_dump(${1:L}, ${2:writer}, ${3:data});
snippet lua_yield int lua_yield(lua_State *L, int nresults);
	lua_yield(${1:L}, ${2:nresults});
snippet lua_resume int lua_resume(lua_State *L, int narg);
	lua_resume(${1:L}, ${2:narg});
snippet lua_status int lua_status(lua_State *L);
	lua_status(${1:L});
snippet lua_gc int lua_gc(lua_State *L, int what, int data);
	lua_gc(${1:L}, ${2:what}, ${3:data});
snippet lua_error int lua_error(lua_State *L);
	lua_error(${1:L});
snippet lua_next int lua_next(lua_State *L, int idx);
	lua_next(${1:L}, ${2:idx});
snippet lua_concat void lua_concat(lua_State *L, int n);
	lua_concat(${1:L}, ${2:n});
snippet lua_getallocf lua_Alloc lua_getallocf(lua_State *L, void **ud);
	lua_getallocf(${1:L}, ${2:ud});
snippet lua_setallocf void lua_setallocf(lua_State *L, lua_Alloc f, void *ud);
	lua_setallocf(${1:L}, ${2:f}, ${3:ud});
snippet lua_setlevel void lua_setlevel(lua_State *from, lua_State *to);
	lua_setlevel(${1:from}, ${2:to});
snippet lua_getstack int lua_getstack(lua_State *L, int level, lua_Debug *ar);
	lua_getstack(${1:L}, ${2:level}, ${3:ar});
snippet lua_getinfo int lua_getinfo(lua_State *L, const char *what, lua_Debug *ar);
	lua_getinfo(${1:L}, ${2:what}, ${3:ar});
snippet lua_sethook int lua_sethook(lua_State *L, lua_Hook func, int mask, int count);
	lua_sethook(${1:L}, ${2:func}, ${3:mask}, ${4:count});
snippet lua_gethook lua_Hook lua_gethook(lua_State *L);
	lua_gethook(${1:L});
snippet lua_gethookmask int lua_gethookmask(lua_State *L);
	lua_gethookmask(${1:L});
snippet lua_gethookcount int lua_gethookcount(lua_State *L);
	lua_gethookcount(${1:L});
snippet luaL_openlibs void luaL_openlibs(lua_State *L); 
	luaL_openlibs(${1:L}); 
snippet luaL_getn int luaL_getn(lua_State *L, int t);
	luaL_getn(${1:L}, ${2:t});
snippet luaL_setn void luaL_setn(lua_State *L, int t, int n);
	luaL_setn(${1:L}, ${2:t}, ${3:n});
snippet luaL_register void luaL_register(lua_State *L, const char *libname, const luaL_Reg *l);
	luaL_register(${1:L}, ${2:libname}, ${3:l});
snippet luaL_getmetafield int luaL_getmetafield(lua_State *L, int obj, const char *e);
	luaL_getmetafield(${1:L}, ${2:obj}, ${3:e});
snippet luaL_callmeta int luaL_callmeta(lua_State *L, int obj, const char *e);
	luaL_callmeta(${1:L}, ${2:obj}, ${3:e});
snippet luaL_typerror int luaL_typerror(lua_State *L, int narg, const char *tname);
	luaL_typerror(${1:L}, ${2:narg}, ${3:tname});
snippet luaL_argerror int luaL_argerror(lua_State *L, int numarg, const char *extramsg);
	luaL_argerror(${1:L}, ${2:numarg}, ${3:extramsg});
snippet luaL_checknumber lua_Number luaL_checknumber(lua_State *L, int numArg);
	luaL_checknumber(${1:L}, ${2:numArg});
snippet luaL_optnumber lua_Number luaL_optnumber(lua_State *L, int nArg, lua_Number def);
	luaL_optnumber(${1:L}, ${2:nArg}, ${3:def});
snippet luaL_checkinteger lua_Integer luaL_checkinteger(lua_State *L, int numArg);
	luaL_checkinteger(${1:L}, ${2:numArg});
snippet luaL_optinteger lua_Integer luaL_optinteger(lua_State *L, int nArg, lua_Integer def);
	luaL_optinteger(${1:L}, ${2:nArg}, ${3:def});
snippet luaL_checkstack void luaL_checkstack(lua_State *L, int sz, const char *msg);
	luaL_checkstack(${1:L}, ${2:sz}, ${3:msg});
snippet luaL_checktype void luaL_checktype(lua_State *L, int narg, int t);
	luaL_checktype(${1:L}, ${2:narg}, ${3:t});
snippet luaL_checkany void luaL_checkany(lua_State *L, int narg);
	luaL_checkany(${1:L}, ${2:narg});
snippet luaL_newmetatable int luaL_newmetatable(lua_State *L, const char *tname);
	luaL_newmetatable(${1:L}, ${2:tname});
snippet luaL_where void luaL_where(lua_State *L, int lvl);
	luaL_where(${1:L}, ${2:lvl});
snippet luaL_error int luaL_error(lua_State *L, const char *fmt, ...);
	luaL_error(${1:L}, ${2:fmt}, ${3:...});
snippet luaL_checkoption int luaL_checkoption(lua_State *L, int narg, const char *def, const char *const lst[]);
	luaL_checkoption(${1:L}, ${2:narg}, ${3:def}, ${4:lst[]});
snippet luaL_ref int luaL_ref(lua_State *L, int t);
	luaL_ref(${1:L}, ${2:t});
snippet luaL_unref void luaL_unref(lua_State *L, int t, int ref);
	luaL_unref(${1:L}, ${2:t}, ${3:ref});
snippet luaL_loadfile int luaL_loadfile(lua_State *L, const char *filename);
	luaL_loadfile(${1:L}, ${2:filename});
snippet luaL_loadbuffer int luaL_loadbuffer(lua_State *L, const char *buff, size_t sz, const char *name);
	luaL_loadbuffer(${1:L}, ${2:buff}, ${3:sz}, ${4:name});
snippet luaL_loadstring int luaL_loadstring(lua_State *L, const char *s);
	luaL_loadstring(${1:L}, ${2:s});
snippet luaL_buffinit void luaL_buffinit(lua_State *L, luaL_Buffer *B);
	luaL_buffinit(${1:L}, ${2:B});
snippet luaL_addlstring void luaL_addlstring(luaL_Buffer *B, const char *s, size_t l);
	luaL_addlstring(${1:B}, ${2:s}, ${3:l});
snippet luaL_addstring void luaL_addstring(luaL_Buffer *B, const char *s);
	luaL_addstring(${1:B}, ${2:s});
snippet luaL_addvalue void luaL_addvalue(luaL_Buffer *B);
	luaL_addvalue(${1:B});
snippet luaL_pushresult void luaL_pushresult(luaL_Buffer *B);
	luaL_pushresult(${1:B});
snippet luaL_checklstring const char *luaL_checklstring(lua_State *L, int numArg, size_t *l);
	luaL_checklstring(${1:L}, ${2:numArg}, ${3:l});
snippet luaL_optlstring const char *luaL_optlstring(lua_State *L, int numArg, const char *def, size_t *l);
	luaL_optlstring(${1:L}, ${2:numArg}, ${3:def}, ${4:l});
snippet luaL_checkudata void *luaL_checkudata(lua_State *L, int ud, const char *tname);
	luaL_checkudata(${1:L}, ${2:ud}, ${3:tname});
snippet luaL_prepbuffer char *luaL_prepbuffer(luaL_Buffer *B);
	luaL_prepbuffer(${1:B});
snippet lua_getlocal const char *lua_getlocal(lua_State *L, const lua_Debug *ar, int n);
	lua_getlocal(${1:L}, ${2:ar}, ${3:n});
snippet lua_setlocal const char *lua_setlocal(lua_State *L, const lua_Debug *ar, int n);
	lua_setlocal(${1:L}, ${2:ar}, ${3:n});
snippet lua_getupvalue const char *lua_getupvalue(lua_State *L, int funcindex, int n);
	lua_getupvalue(${1:L}, ${2:funcindex}, ${3:n});
snippet lua_setupvalue const char *lua_setupvalue(lua_State *L, int funcindex, int n);
	lua_setupvalue(${1:L}, ${2:funcindex}, ${3:n});
snippet lua_newuserdata void *lua_newuserdata(lua_State *L, size_t sz);
	lua_newuserdata(${1:L}, ${2:sz});
snippet lua_pushvfstring const char *lua_pushvfstring(lua_State *L, const char *fmt, va_list argp);
	lua_pushvfstring(${1:L}, ${2:fmt}, ${3:argp});
snippet lua_pushfstring const char *lua_pushfstring(lua_State *L, const char *fmt, ...);
	lua_pushfstring(${1:L}, ${2:fmt}, ${3:...});
snippet lua_touserdata void *lua_touserdata(lua_State *L, int idx);
	lua_touserdata(${1:L}, ${2:idx});
snippet lua_tothread lua_State *lua_tothread(lua_State *L, int idx);
	lua_tothread(${1:L}, ${2:idx});
snippet lua_topointer const void *lua_topointer(lua_State *L, int idx);
	lua_topointer(${1:L}, ${2:idx});
snippet lua_tolstring const char *lua_tolstring(lua_State *L, int idx, size_t *len);
	lua_tolstring(${1:L}, ${2:idx}, ${3:len});
snippet lua_newstate lua_State *lua_newstate(lua_Alloc f, void *ud);
	lua_newstate(${1:f}, ${2:ud});
snippet lua_newthread lua_State *lua_newthread(lua_State *L);
	lua_newthread(${1:L});
snippet lua_typename const char *lua_typename(lua_State *L, int tp);
	lua_typename(${1:L}, ${2:tp});
snippet luaL_newstate lua_State *luaL_newstate(void);
	luaL_newstate();
snippet luaL_gsub const char *luaL_gsub(lua_State *L, const char *s, const char *p, const char *r);
	luaL_gsub(${1:L}, ${2:s}, ${3:p}, ${4:r});
snippet luaL_findtable const char *luaL_findtable(lua_State *L, int idx, const char *fname, int szhint);
	luaL_findtable(${1:L}, ${2:idx}, ${3:fname}, ${4:szhint});

snippet lua_pop lua_pop(L, n);
	lua_pop(${1:L}, ${2:n});
snippet lua_newtable lua_newtable(L);
	lua_newtable(${1:L});
snippet lua_register lua_register(L, n, f);
	lua_register(${1:L}, ${2:n}, ${3:f});
snippet lua_pushcfunction lua_pushcfunction(L, f);
	lua_pushcfunction(${1:L}, ${2:f});
snippet lua_strlen lua_strlen(L, i);
	lua_strlen(${1:L}, ${2:i});
snippet lua_isfunction lua_isfunction(L, n);
	lua_isfunction(${1:L}, ${2:n});
snippet lua_istable lua_istable(L, n);
	lua_istable(${1:L}, ${2:n});
snippet lua_islightuserdata lua_islightuserdata(L, n);
	lua_islightuserdata(${1:L}, ${2:n});
snippet lua_isnil lua_isnil(L, n);
	lua_isnil(${1:L}, ${2:n});
snippet lua_isboolean lua_isboolean(L, n);
	lua_isboolean(${1:L}, ${2:n});
snippet lua_isthread lua_isthread(L, n);
	lua_isthread(${1:L}, ${2:n});
snippet lua_isnone lua_isnone(L, n);
	lua_isnone(${1:L}, ${2:n});
snippet lua_isnoneornil lua_isnoneornil(L, n);
	lua_isnoneornil(${1:L}, ${2:n});
snippet lua_pushliteral lua_pushliteral(L, s);
	lua_pushliteral(${1:L}, ${2:s});
snippet lua_setglobal lua_setglobal(L, s);
	lua_setglobal(${1:L}, ${2:s});
snippet lua_getglobal lua_getglobal(L, s);
	lua_getglobal(${1:L}, ${2:s});
snippet lua_tostring lua_tostring(L, i);
	lua_tostring(${1:L}, ${2:i});
snippet lua_open lua_open();
	lua_open(${1:});
snippet lua_getregistry lua_getregistry(L);
	lua_getregistry(${1:L});
snippet lua_getgccount lua_getgccount(L);
	lua_getgccount(${1:L});
snippet luaL_getn luaL_getn(L, i);
	luaL_getn(${1:L}, ${2:i});
snippet luaL_setn luaL_setn(L, i, j);
	luaL_setn(${1:L}, ${2:i}, ${3:j});
snippet luaL_argcheck luaL_argcheck(L, cond, numarg, extramsg);
	luaL_argcheck(${1:L}, ${2:cond}, ${3:numarg}, ${4:extramsg});
snippet luaL_checkstring luaL_checkstring(L, n);
	luaL_checkstring(${1:L}, ${2:n});
snippet luaL_optstring luaL_optstring(L, n, d);
	luaL_optstring(${1:L}, ${2:n}, ${3:d});
snippet luaL_checkint luaL_checkint(L, n);
	luaL_checkint(${1:L}, ${2:n});
snippet luaL_optint luaL_optint(L, n, d);
	luaL_optint(${1:L}, ${2:n}, ${3:d});
snippet luaL_checklong luaL_checklong(L, n);
	luaL_checklong(${1:L}, ${2:n});
snippet luaL_optlong luaL_optlong(L, n, d);
	luaL_optlong(${1:L}, ${2:n}, ${3:d});
snippet luaL_typename luaL_typename(L, i);
	luaL_typename(${1:L}, ${2:i});
snippet luaL_dofile luaL_dofile(L, fn);
	luaL_dofile(${1:L}, ${2:fn});
snippet luaL_dostring luaL_dostring(L, s);
	luaL_dostring(${1:L}, ${2:s});
snippet luaL_getmetatable luaL_getmetatable(L, n);
	luaL_getmetatable(${1:L}, ${2:n});
snippet luaL_opt luaL_opt(L, f, n, d);
	luaL_opt(${1:L}, ${2:f}, ${3:n}, ${4:d});
snippet luaL_addchar luaL_addchar(B, c);
	luaL_addchar(${1:B}, ${2:c});
snippet luaL_putchar luaL_putchar(B, c);
	luaL_putchar(${1:B}, ${2:c});
snippet luaL_addsize luaL_addsize(B, n);
	luaL_addsize(${1:B}, ${2:n});
snippet lua_ref lua_ref(L, lock);
	lua_ref(${1:L}, ${2:lock});
snippet lua_unref lua_unref(L, ref);
	lua_unref(${1:L}, ${2:ref});
